# Generated by Django 3.2.12 on 2023-03-18 16:10

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('authorization', '0018_alter_customuser_tariff_ends_at'),
    ]

    operations = [
        migrations.CreateModel(
            name='Allergen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15, verbose_name='Аллергия')),
            ],
            options={
                'verbose_name': 'Аллергия',
                'verbose_name_plural': 'Аллергии',
            },
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('promo_code', models.CharField(max_length=255, unique=True, verbose_name='Промокод')),
                ('discount', models.PositiveIntegerField(verbose_name='Размер скидки')),
                ('lasts_till', models.DateField(verbose_name='Действителен до')),
                ('used', models.BooleanField(default=False, verbose_name='Использован ли')),
            ],
            options={
                'verbose_name': 'Промокод',
                'verbose_name_plural': 'Промокоды',
            },
        ),
        migrations.RemoveField(
            model_name='tariff',
            name='bee_allergy',
        ),
        migrations.RemoveField(
            model_name='tariff',
            name='fish_allergy',
        ),
        migrations.RemoveField(
            model_name='tariff',
            name='lactose_allergy',
        ),
        migrations.RemoveField(
            model_name='tariff',
            name='meat_allergy',
        ),
        migrations.RemoveField(
            model_name='tariff',
            name='nut_allergy',
        ),
        migrations.RemoveField(
            model_name='tariff',
            name='seed_allergy',
        ),
        migrations.AddField(
            model_name='tariff',
            name='price',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='Стоимость'),
        ),
        migrations.AlterField(
            model_name='customuser',
            name='tariff_ends_at',
            field=models.DateField(default=datetime.datetime(2023, 3, 17, 19, 10, 6, 170528), verbose_name='Тариф заканчивается'),
        ),
        migrations.AlterField(
            model_name='tariff',
            name='breakfast',
            field=models.BooleanField(blank=True, null=True, verbose_name='Включены завтраки'),
        ),
        migrations.AlterField(
            model_name='tariff',
            name='desert',
            field=models.BooleanField(blank=True, null=True, verbose_name='Включены десерты'),
        ),
        migrations.AlterField(
            model_name='tariff',
            name='dinner',
            field=models.BooleanField(blank=True, null=True, verbose_name='Включены ужины'),
        ),
        migrations.AlterField(
            model_name='tariff',
            name='lunch',
            field=models.BooleanField(blank=True, null=True, verbose_name='Включены обеды'),
        ),
        migrations.AlterField(
            model_name='tariff',
            name='name',
            field=models.CharField(blank=True, choices=[('classic', 'Классическое'), ('low_carb', 'Низкоуглеводное'), ('vegeterian', 'Вегетарианское'), ('keto', 'Кето')], max_length=255, verbose_name='Название'),
        ),
        migrations.AlterField(
            model_name='tariff',
            name='persons',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='Количество персон'),
        ),
        migrations.AddField(
            model_name='tariff',
            name='allergens',
            field=models.ManyToManyField(blank=True, related_name='tariffs', to='authorization.Allergen'),
        ),
        migrations.AddField(
            model_name='tariff',
            name='promo_code',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authorization.promocode', verbose_name='Промокод'),
        ),
    ]
